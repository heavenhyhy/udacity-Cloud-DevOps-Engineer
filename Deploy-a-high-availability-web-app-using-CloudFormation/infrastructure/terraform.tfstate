{
  "version": 4,
  "terraform_version": "1.9.1",
  "serial": 123,
  "lineage": "23b2a616-6e9d-2dc1-c4c8-07c2aa9dcfb7",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": [
              "CAPABILITY_NAMED_IAM"
            ],
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:902971260576:stack/app/a917c620-73e4-11ef-aec3-0e04891abfad",
            "name": "app",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "ApplicationURL": "http://application-alb-19315911.us-east-1.elb.amazonaws.com"
            },
            "parameters": {
              "KeyPair": "Udacity SSH Key"
            },
            "policy_body": null,
            "policy_url": null,
            "tags": null,
            "tags_all": {},
            "template_body": "Description:  CD12352 - Infrastructure as Code Project - Udagram\r\n\r\nParameters:\r\n  KeyPair:\r\n    Type: String\r\n\r\nResources:\r\n  \r\n  # Can not create and use InstanceProfile due to:\r\n  # User: arn:aws:sts::902971260576:assumed-role/voclabs/user3351969=81da30af-3fd5-44e4-b5b6-60110b443ba5 \r\n  # is not authorized to perform: iam:GetInstanceProfile on resource: instance profile Ec2ProfileWithS3Role \r\n  # because no identity-based policy allows the iam:GetInstanceProfile action\r\n  # ProfileWithRolesForOurApp:\r\n  #     Type: AWS::IAM::InstanceProfile\r\n  #     Properties: \r\n  #       InstanceProfileName: Ec2ProfileWithS3Role\r\n  #       Roles:\r\n  #         - !ImportValue S3Role\r\n\r\n  LaunchTemplate:\r\n    Type: AWS::EC2::LaunchTemplate\r\n    Properties:\r\n      LaunchTemplateData:\r\n        ImageId: ami-0a0e5d9c7acc336f1\r\n        InstanceType: \"t2.micro\"\r\n        SecurityGroupIds:\r\n          - !ImportValue ApplicationSecurityGroup\r\n        # IamInstanceProfile: \r\n        #   Name: Ec2ProfileWithS3Role\r\n        BlockDeviceMappings:\r\n          - DeviceName: \"/dev/sdk\"\r\n            Ebs:\r\n              VolumeSize: '11' \r\n        UserData:\r\n          Fn::Base64: !Sub |\r\n            #!/bin/bash\r\n            apt-get update -y\r\n            apt-get install apache2 -y\r\n            systemctl start apache2.service\r\n            cd /var/www/html\r\n            echo \"Udacity Demo Web Server Up and Running!\" \u003e index.html\r\n\r\n  ApplicationLoadBalancerSG:\r\n    Type: AWS::EC2::SecurityGroup\r\n    Properties:\r\n      GroupName: ApplicationLoadBalancerSG\r\n      GroupDescription: \"Security group for this application server\"\r\n      SecurityGroupEgress:\r\n      - IpProtocol: -1\r\n        CidrIp: 0.0.0.0/0\r\n      SecurityGroupIngress:\r\n      - IpProtocol: tcp\r\n        FromPort: 80\r\n        ToPort: 80\r\n        CidrIp: 0.0.0.0/0\r\n      VpcId: !ImportValue VpcId\r\n\r\n  ApplicationLoadBalancer:\r\n    Type: AWS::ElasticLoadBalancingV2::LoadBalancer\r\n    Properties:\r\n      Name: application-alb\r\n      SecurityGroups:\r\n      - !GetAtt ApplicationLoadBalancerSG.GroupId\r\n      Subnets: !Split [ \", \", !ImportValue PublicSubnets ]\r\n\r\n  ApplicationLoadBalancerListener:\r\n    Type: AWS::ElasticLoadBalancingV2::Listener\r\n    Properties:\r\n      DefaultActions:\r\n        - Type: forward\r\n          TargetGroupArn: !Ref ApplicationTargetGroup\r\n      LoadBalancerArn: !Ref ApplicationLoadBalancer\r\n      Port: 80\r\n      Protocol: HTTP\r\n\r\n  ApplicationTargetGroup:\r\n    Type: AWS::ElasticLoadBalancingV2::TargetGroup\r\n    Properties:\r\n      HealthCheckEnabled: true\r\n      HealthCheckIntervalSeconds: 10\r\n      HealthCheckPath: /health\r\n      Name: ApplicationTargetGroup\r\n      Port: 5000\r\n      VpcId: !ImportValue VpcId\r\n      Protocol: HTTP\r\n      TargetType: instance\r\n\r\n  AutoScalingGroup:\r\n    Type: AWS::AutoScaling::AutoScalingGroup\r\n    Properties:\r\n      VPCZoneIdentifier: !Split [ \", \", !ImportValue PublicSubnets ]\r\n      LaunchTemplate:\r\n        LaunchTemplateId: !Ref LaunchTemplate\r\n        Version: !GetAtt LaunchTemplate.LatestVersionNumber\r\n      MinSize: 1\r\n      MaxSize: 2\r\n      DesiredCapacity: 1\r\n      HealthCheckGracePeriod: 300\r\n      TargetGroupARNs:\r\n        - !Ref ApplicationTargetGroup\r\n\r\nOutputs:\r\n  ApplicationURL:\r\n    Value: !Join [\"\", [\"http://\", !GetAtt ApplicationLoadBalancer.DNSName]] \r\n",
            "template_url": null,
            "timeout_in_minutes": 0,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_cloudformation_stack.network",
            "aws_cloudformation_stack.s3",
            "aws_key_pair.ssh"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "network",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": null,
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:902971260576:stack/network/71b317a0-73d7-11ef-b744-12f19c4ccc99",
            "name": "network",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "ApplicationSecurityGroup": "sg-042227932442f7667",
              "PrivateSubnets": "subnet-0a9a560e8a73edfa8, subnet-0bb300ea142922ac3",
              "PublicSubnets": "subnet-06048830166949b40, subnet-076c1241b2a7f8b5f",
              "VPC": "vpc-08e7cd9eacdbd5b98"
            },
            "parameters": {
              "PrivateSubnet1CIDR": "10.1.20.0/24",
              "PrivateSubnet2CIDR": "10.1.21.0/24",
              "PublicSubnet1CIDR": "10.1.10.0/24",
              "PublicSubnet2CIDR": "10.1.11.0/24",
              "VpcCIDR": "10.1.0.0/16",
              "VpcName": "CD12352-vpc"
            },
            "policy_body": null,
            "policy_url": null,
            "tags": {},
            "tags_all": {},
            "template_body": "Description:  CD12352 - Infrastructure as Code Project - Network\r\n\r\nParameters:\r\n  VpcName:\r\n    Type: String\r\n\r\n  VpcCIDR:\r\n    Type: String\r\n\r\n  PublicSubnet1CIDR:\r\n    Type: String\r\n\r\n  PublicSubnet2CIDR:\r\n    Type: String\r\n\r\n  PrivateSubnet1CIDR:\r\n    Type: String\r\n\r\n  PrivateSubnet2CIDR:\r\n    Type: String\r\n\r\nResources:\r\n  VPC:\r\n    Type: AWS::EC2::VPC\r\n    Properties:\r\n      CidrBlock: !Ref VpcCIDR\r\n      EnableDnsSupport: true\r\n      EnableDnsHostnames: true\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Ref VpcName\r\n\r\n  InternetGateway:\r\n    Type: AWS::EC2::InternetGateway\r\n    Properties:\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Ref VpcName\r\n\r\n  InternetGatewayAttachment:\r\n    Type: AWS::EC2::VPCGatewayAttachment\r\n    Properties:\r\n      InternetGatewayId: !Ref InternetGateway\r\n      VpcId: !Ref VPC\r\n\r\n  PublicSubnet1:\r\n    Type: AWS::EC2::Subnet\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      AvailabilityZone: !Select [ 0, !GetAZs '' ]\r\n      CidrBlock: !Ref PublicSubnet1CIDR\r\n      MapPublicIpOnLaunch: true\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Sub\r\n            - ${VpcName} Public Subnet (${AZ1})\r\n            - { AZ1: !Select [ 0, !GetAZs  '' ] }\r\n\r\n  PublicSubnet2:\r\n    Type: AWS::EC2::Subnet\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      AvailabilityZone: !Select [ 1, !GetAZs  '' ]\r\n      CidrBlock: !Ref PublicSubnet2CIDR\r\n      MapPublicIpOnLaunch: true\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Sub\r\n            - ${VpcName} Public Subnet (${AZ2})\r\n            - { AZ2: !Select [ 1, !GetAZs  '' ] }\r\n\r\n  PrivateSubnet1:\r\n    Type: AWS::EC2::Subnet\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      AvailabilityZone: !Select [ 0, !GetAZs  '' ]\r\n      CidrBlock: !Ref PrivateSubnet1CIDR\r\n      MapPublicIpOnLaunch: false\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Sub\r\n            - ${VpcName} Private Subnet (${AZ1})\r\n            - { AZ1: !Select [ 0, !GetAZs  '' ] }\r\n\r\n  PrivateSubnet2:\r\n    Type: AWS::EC2::Subnet\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      AvailabilityZone: !Select [ 1, !GetAZs  '' ]\r\n      CidrBlock: !Ref PrivateSubnet2CIDR\r\n      MapPublicIpOnLaunch: false\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Sub\r\n            - ${VpcName} Private Subnet (${AZ2})\r\n            - { AZ2: !Select [ 1, !GetAZs  '' ] }\r\n\r\n  NatGateway1EIP:\r\n    Type: AWS::EC2::EIP\r\n    DependsOn: InternetGatewayAttachment\r\n    Properties:\r\n      Domain: vpc\r\n  \r\n  NatGateway2EIP:\r\n    Type: AWS::EC2::EIP\r\n    DependsOn: InternetGatewayAttachment\r\n    Properties:\r\n      Domain: vpc\r\n  \r\n  NatGateway1:\r\n    Type: AWS::EC2::NatGateway\r\n    Properties:\r\n      AllocationId: !GetAtt NatGateway1EIP.AllocationId\r\n      SubnetId: !Ref PublicSubnet1\r\n  \r\n  NatGateway2:\r\n    Type: AWS::EC2::NatGateway\r\n    Properties:\r\n      AllocationId: !GetAtt NatGateway2EIP.AllocationId\r\n      SubnetId: !Ref PublicSubnet2\r\n\r\n  PublicRouteTable:\r\n    Type: AWS::EC2::RouteTable\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      Tags:\r\n        - Key: Name\r\n          Value: !Sub ${VpcName} Public Routes\r\n\r\n  DefaultPublicRoute:\r\n    Type: AWS::EC2::Route\r\n    DependsOn: InternetGatewayAttachment\r\n    Properties:\r\n      RouteTableId: !Ref PublicRouteTable\r\n      DestinationCidrBlock: 0.0.0.0/0\r\n      GatewayId: !Ref InternetGateway\r\n\r\n  PublicSubnet1RouteTableAssociation:\r\n    Type: AWS::EC2::SubnetRouteTableAssociation\r\n    Properties:\r\n      RouteTableId: !Ref PublicRouteTable\r\n      SubnetId: !Ref PublicSubnet1\r\n\r\n  PublicSubnet2RouteTableAssociation:\r\n    Type: AWS::EC2::SubnetRouteTableAssociation\r\n    Properties:\r\n      RouteTableId: !Ref PublicRouteTable\r\n      SubnetId: !Ref PublicSubnet2\r\n\r\n  PrivateRouteTable1:\r\n    Type: AWS::EC2::RouteTable\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      Tags:\r\n        - Key: Name\r\n          Value: Private Routes (AZ1)\r\n\r\n  DefaultPrivateRoute1:\r\n    Type: AWS::EC2::Route\r\n    Properties:\r\n      RouteTableId: !Ref PrivateRouteTable1\r\n      DestinationCidrBlock: 0.0.0.0/0\r\n      GatewayId: !Ref InternetGateway\r\n\r\n  PrivateSubnet1RouteTableAssociation:\r\n    Type: AWS::EC2::SubnetRouteTableAssociation\r\n    Properties:\r\n      RouteTableId: !Ref PrivateRouteTable1\r\n      SubnetId: !Ref PrivateSubnet1\r\n\r\n  PrivateRouteTable2:\r\n    Type: AWS::EC2::RouteTable\r\n    Properties:\r\n      VpcId: !Ref VPC\r\n      Tags:\r\n        - Key: Name\r\n          Value: Private Routes (AZ2)\r\n\r\n  DefaultPrivateRoute2:\r\n    Type: AWS::EC2::Route\r\n    Properties:\r\n      RouteTableId: !Ref PrivateRouteTable2\r\n      DestinationCidrBlock: 0.0.0.0/0\r\n      GatewayId: !Ref InternetGateway\r\n\r\n  PrivateSubnet2RouteTableAssociation:\r\n    Type: AWS::EC2::SubnetRouteTableAssociation\r\n    Properties:\r\n      RouteTableId: !Ref PrivateRouteTable2\r\n      SubnetId: !Ref PrivateSubnet2\r\n\r\n  ApplicationSecurityGroup:\r\n    Type: AWS::EC2::SecurityGroup\r\n    Properties:\r\n      GroupDescription: Udacity CloudFormation Project - Security Group\r\n      GroupName: Udacity-SG\r\n      SecurityGroupEgress:\r\n      - IpProtocol: -1\r\n        CidrIp: 0.0.0.0/0\r\n      SecurityGroupIngress:\r\n        - Description: SSH from the Internet\r\n          FromPort: 22\r\n          IpProtocol: tcp\r\n          CidrIp: 0.0.0.0/0\r\n          ToPort: 22\r\n        - IpProtocol: tcp\r\n          FromPort: 80\r\n          ToPort: 80\r\n          CidrIp: 0.0.0.0/0\r\n      VpcId: !Ref VPC\r\n      Tags:\r\n        - Key: Name\r\n          Value: Udacity-SG\r\n\r\nOutputs:\r\n  VPC:\r\n    Value: !Ref VPC\r\n    Export:\r\n      Name: VpcId\r\n\r\n  PublicSubnets:\r\n    Value: !Join [ \", \", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]\r\n    Export:\r\n      Name: PublicSubnets\r\n\r\n  PrivateSubnets:\r\n    Value: !Join [ \", \", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]\r\n    Export:\r\n      Name: PrivateSubnets\r\n\r\n  ApplicationSecurityGroup:\r\n    Value: !Ref ApplicationSecurityGroup\r\n    Export:\r\n      Name: ApplicationSecurityGroup\r\n",
            "template_url": null,
            "timeout_in_minutes": 0,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "s3",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": [
              "CAPABILITY_NAMED_IAM"
            ],
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:902971260576:stack/s3/fd8290d0-73d7-11ef-96d5-0affe0caec1f",
            "name": "s3",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "BucketName": "arn:aws:s3:::static-content-sangtd2-902971260576",
              "S3RoleName": "CD12352UdacityS3ReadOnlyAccess"
            },
            "parameters": {},
            "policy_body": null,
            "policy_url": null,
            "tags": {},
            "tags_all": {},
            "template_body": "Description:  CD12352 - Infrastructure as Code Project - S3 Bucket\r\n\r\nResources:\r\n  S3Bucket:\r\n    Type: AWS::S3::Bucket\r\n    Properties:\r\n      BucketName: !Join [ \"-\", [ \"static-content-sangtd2\", !Ref 'AWS::AccountId' ] ]\r\n      PublicAccessBlockConfiguration:\r\n        BlockPublicAcls: false\r\n        BlockPublicPolicy: false\r\n        IgnorePublicAcls: false\r\n        RestrictPublicBuckets: false\r\n      OwnershipControls:\r\n        Rules:\r\n          - ObjectOwnership: BucketOwnerEnforced\r\n\r\n  S3Role:\r\n    Type: AWS::IAM::Role\r\n    Properties:\r\n      RoleName: CD12352UdacityS3ReadOnlyAccess\r\n      AssumeRolePolicyDocument:\r\n        Version: '2012-10-17'\r\n        Statement:\r\n        - Effect: Allow\r\n          Principal:\r\n            Service: ec2.amazonaws.com\r\n          Action: 'sts:AssumeRole'\r\n      ManagedPolicyArns:\r\n        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess\r\n\r\n  S3BucketPolicy:\r\n    Type: AWS::S3::BucketPolicy\r\n    Properties:\r\n      Bucket: !Ref S3Bucket\r\n      PolicyDocument:\r\n        Version: '2012-10-17'\r\n        Statement:\r\n        - Effect: Allow\r\n          Principal:\r\n            AWS: !GetAtt S3Role.Arn\r\n          Action:\r\n          - 's3:*'\r\n          Resource:\r\n          - !GetAtt S3Bucket.Arn\r\n          - !Join ['', [!GetAtt S3Bucket.Arn, '/*']]\r\n\r\nOutputs:\r\n  BucketName:\r\n    Value: !GetAtt S3Bucket.Arn\r\n  S3RoleName:\r\n    Value: !Ref S3Role\r\n    Export:\r\n      Name: S3Role\r\n",
            "template_url": null,
            "timeout_in_minutes": 0,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_cloudformation_stack.network"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "ssh",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:902971260576:key-pair/Udacity SSH Key",
            "fingerprint": "1e:60:6f:13:e0:76:f4:e7:78:5c:82:1d:52:8d:19:56",
            "id": "Udacity SSH Key",
            "key_name": "Udacity SSH Key",
            "key_name_prefix": "",
            "key_pair_id": "key-0bdb7c91c4a755c41",
            "key_type": "rsa",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCxRjAdK4yGDPEV6ZAKgUgydMxZKeI2Z9XvP9+rLMykxDFRsPYbK/BpNO5E40rM6ujoc17JcivLAoBD+7p+TiFMRUxmSd8EShDWrPfxJ20kNi8LwNmm8zHDTf9PZbaz7Y/S7f2Bs+h/NquXZY+zPVuJMrWNJu1rblEa/pGmSM3Gpy3U+8LY0M8dUSKyU5PpVLcMRHnrXLE+72GnONBbgkFWa/MskjZ76Svl9cizeOBYO8+pLT3kgXPGRjpBOASKBdT0t3TvcQ0IosyU44HfZGlqK1+BhVI0QsDYIM6N/p6uLOtQkv+HzKwHT17yA/snrlojSMczqbfRXpFmyKnzG7HHuDdJ4U++bllsep99Fj4e2F5YF/ZpPGtSatOwXa4Q5d19+6urKUnJNGx/lcpOuUHjDHGqlJZ3X2AeTs7MWIK8QdtMJgzS2sPQKNnr9PmEoTjAZqtfSevG2fqkuHJnFTJouyXL4yOIgQinz9F/xCcTZHRGfkeP40Wv3lAOdXJCvBrLqWr7pcq/p6Sa/egMiX6H723W99lbuxGVzzckowTWZS9IOYi25QDpa6CF5GNUqJL90cE1WnF/spWNhYffuGOK2EG3qQqkkh3gH/fbRZQPZbv8KxL02benISycBD32l5nfRA1/NXchL4KOkv9qK16RYH6qE+enwTNbzl4NR30xxQ== admin@HuyenDao",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
