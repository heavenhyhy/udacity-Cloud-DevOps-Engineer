Description: Creates an ECR repository and a CodeBuild project.

Parameters:
  GitHubOAuthToken:
    Type: AWS::SSM::Parameter::Value<String>
    Description: GitHub personal access token

Resources:
  CodeBuildSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: !Ref GitHubOAuthToken
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: analytics-application-ecr

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: analytics-application-codebuild
      ServiceRole: !Ref CodeBuildServiceRole
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: us-east-1
          - Name: ECR_REPOSITORY_URI
            Value: !GetAtt ECRRepository.RepositoryUri
          - Name: ECR_REPOSITORY_URI_LOGIN
            Value: !Select [0, !Split [ "/", !GetAtt ECRRepository.RepositoryUri ]]
          - Name: ECR_REPOSITORY
            Value: !Select [1, !Split [ "/", !GetAtt ECRRepository.RepositoryUri ]]
      Source:
        Type: GITHUB
        Location: https://github.com/heavenhyhy/udacity-Cloud-DevOps-Engineer.git
        GitCloneDepth: 1
        GitSubmodulesConfig:
          FetchSubmodules: true
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.9
            pre_build:
              commands:
                - echo "Logging in to Amazon ECR..."
                - aws ecr get-login-password --region $AWS_DEFAULT_REGION | 
                  docker login --username AWS --password-stdin $ECR_REPOSITORY_URI_LOGIN
            build:
              commands:
                - echo "Building the Docker image..."
                - cd ./Operationalizing-CoWorking-Space-Service/analytics
                - docker build -t $ECR_REPOSITORY:$CODEBUILD_BUILD_NUMBER .
                - docker tag $ECR_REPOSITORY:$CODEBUILD_BUILD_NUMBER $ECR_REPOSITORY_URI:$CODEBUILD_BUILD_NUMBER 
            post_build:
              commands:
                - echo "Pushing to ECR..."
                - docker push $ECR_REPOSITORY_URI:$CODEBUILD_BUILD_NUMBER
        Auth:
          Type: OAUTH
          Resource: !Ref CodeBuildSourceCredential
      Triggers:
        Webhook: true
        BuildType: BUILD
        FilterGroups:
          # Filter Group 1
          #    is this  triggered when a webhook payload is of type 'PUSH'
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: ^refs/heads/.*

Outputs:
  ECRRepositoryName:
    Description: Name of the ECR repository
    Value: !Ref ECRRepository
  CodeBuildProjectName:
    Description: Name of the CodeBuild project
    Value: !Ref CodeBuildProject
